# -*- coding: utf-8 -*-
"""customer_data solution

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fML1ch9UO1CA3JQN4k6IjzfShXmfistl

**Import** **Libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans

"""**TASK 1 : Data loading and exploration**"""

customer_data = pd.read_csv('/content/Customers.csv')

x = customer_data.iloc[:,[3,4]].values
print(x)

customer_data.head()

customer_data.shape

customer_data.info()

"""**Task 2: Create Scatter Plot between Annual Income & Spending Score**

"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

x = np.random.normal(5.0,1.0,200)
y = np.random.normal(10.0,2.0,200)

plt.scatter(x,y)

"""**Task 3: Perform Scaling using MinMaxScaler**"""

#import module
from sklearn.preprocessing import MinMaxScaler

data = customer_data.iloc[:,[3,4]].values
scaler = MinMaxScaler()
model = scaler.fit(data)

scaled_data = model.transform(data)

print(scaled_data)

"""**Task 4: Develop Clusters using KMeans**"""

#using wscc for clustering
wcss = []
x = data
for i in range(1,11):
  kmeans = KMeans(n_clusters= i,init="k-means++",random_state=42)
  kmeans.fit(x)
  
  wcss.append(kmeans.inertia_)

#number of clusters using elbow graph point
sns.set()
plt.plot(range(1,11),wcss)
plt.title('The elbow point graph')
plt.xlabel('Number of clusters')
plt.ylabel('wcss')
plt.show()

#k-means cluster model = 5
kmeans = KMeans(n_clusters=5,init="k-means++",random_state=0)
#return a label for each point
y = kmeans.fit_predict(x)
print(y)

#visualizing all the clusters
#plotting the clusters
plt.figure(figsize=(8,8))
plt.scatter(x[y==0,0],x[y==0,1],s=50,c='green',label='cluster 1')
plt.scatter(x[y==1,0],x[y==1,1],s=50,c='red',label='cluster 2')
plt.scatter(x[y==2,0],x[y==2,1],s=50,c='yellow',label='cluster 3')
plt.scatter(x[y==3,0],x[y==3,1],s=50,c='violet',label='cluster 4')
plt.scatter(x[y==4,0],x[y==4,1],s=50,c='blue',label='cluster 5')

#plotting the centroids
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=100,c='cyan',label='centroids')
plt.title('Customer groups')
plt.xlabel('Annual income')
plt.ylabel('Spending score')
plt.show()